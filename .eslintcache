[{"C:\\Users\\larry\\robinhood\\src\\reportWebVitals.js":"1","C:\\Users\\larry\\robinhood\\src\\App.js":"2","C:\\Users\\larry\\robinhood\\src\\Header.js":"3","C:\\Users\\larry\\robinhood\\src\\Newsfeed.js":"4","C:\\Users\\larry\\robinhood\\src\\LineGraph.js":"5","C:\\Users\\larry\\robinhood\\src\\Stats.js":"6","C:\\Users\\larry\\robinhood\\src\\StatsRow.js":"7","C:\\Users\\larry\\robinhood\\src\\firebase.js":"8","C:\\Users\\larry\\robinhood\\src\\TimeLine.js":"9","C:\\Users\\larry\\robinhood\\src\\index.js":"10","C:\\Users\\larry\\robinhood\\src\\Chip.js":"11"},{"size":362,"mtime":1606758317234,"results":"12","hashOfConfig":"13"},{"size":457,"mtime":1607198857370,"results":"14","hashOfConfig":"13"},{"size":820,"mtime":1606782393209,"results":"15","hashOfConfig":"13"},{"size":2622,"mtime":1607288362276,"results":"16","hashOfConfig":"13"},{"size":2385,"mtime":1607213936414,"results":"17","hashOfConfig":"13"},{"size":3553,"mtime":1607282537851,"results":"18","hashOfConfig":"13"},{"size":1971,"mtime":1607293685246,"results":"19","hashOfConfig":"13"},{"size":502,"mtime":1607281434253,"results":"20","hashOfConfig":"13"},{"size":657,"mtime":1607283066877,"results":"21","hashOfConfig":"13"},{"size":500,"mtime":1606758317234,"results":"22","hashOfConfig":"13"},{"size":422,"mtime":1607288120466,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vbuz7r",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\larry\\robinhood\\src\\reportWebVitals.js",[],"C:\\Users\\larry\\robinhood\\src\\App.js",["54"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Newsfeed from './Newsfeed.js'\nimport Stats from './Stats';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"app__header\">\n        <Header />\n      </div>\n\n      <div className=\"app__body\">\n        <div className=\"app__container\">\n          <Newsfeed />\n          <Stats />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["55","56"],"C:\\Users\\larry\\robinhood\\src\\Header.js",["57","58","59","60","61","62"],"import React from 'react';\r\nimport Logo from './robinhood.svg';\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header__wrapper'>\r\n            <div className=\"header__logo\">\r\n                <img src={Logo} width={25}/>\r\n            </div>\r\n            <div className=\"header__search\">\r\n                <div className=\"header__searchContainer\">\r\n                   <input type=\"text\" placeholder='Search' /> \r\n                </div>\r\n            </div>\r\n            <div className=\"header__menuItems\">\r\n                <a href=\"#\">Free Stocks</a>\r\n                <a href=\"#\">Portfolio</a>\r\n                <a href=\"#\">Cash</a>\r\n                <a href=\"#\">Messages</a>\r\n                <a href=\"#\">Account</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\larry\\robinhood\\src\\Newsfeed.js",["63"],"import React, {useState} from 'react';\r\nimport LineGraph from './LineGraph';\r\nimport './Newsfeed.css';\r\nimport TimeLine from './TimeLine';\r\n// import Chip from '@material-ui/core/Chip';\r\n// import {Avatar} from 'material-ui/core';\r\nimport Chip from './Chip'\r\n\r\n// const popularTopics = [\r\n//     'Technology',\r\n//     'Top Movies',\r\n//     'Upcoming Earnings',\r\n//     'Crypto',\r\n//     'Cannabis',\r\n//     'Healthcare Supplies',\r\n//     'Index ETFs',\r\n//     'China',\r\n//     'Pharma',\r\n// ]\r\n\r\nfunction Newsfeed() {\r\n const [popularTopics, setPopularTopics] = useState([\r\n    'Technology',\r\n    'Top Movies',\r\n    'Upcoming Earnings',\r\n    'Crypto',\r\n    'Cannabis',\r\n    'Healthcare Supplies',\r\n    'Index ETFs',\r\n    'China',\r\n    'Pharma',\r\n ])\r\n\r\n    return (\r\n        <div className='newsfeed'>\r\n            <div className=\"newfeed__container\">\r\n                <div className=\"newsfeed__chartSection\">\r\n                    <div className=\"newsfeed__portfolio\">\r\n                        <h1>$114,656</h1>\r\n                        <p>+44.63 (+0.04%) today</p>\r\n                    </div>\r\n                    <div className=\"newsfeed__chart\">\r\n                        <LineGraph />\r\n                        <TimeLine />\r\n                    </div>\r\n                </div>\r\n                <div className=\"newsfeed__buying__section\">\r\n                    <h2>Buying Power</h2>\r\n                    <h2>$4.11</h2>\r\n                </div>\r\n                <div className=\"newsfeed__market__section\">\r\n                    <div className=\"newsfeed__market__box\">\r\n                        <p>Markets Closed</p>\r\n                        <h1>Happy Thanksgiving</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"newsfeed__popularlists__section\">\r\n                    <div className=\"newsfeed__popularlists__intro\">\r\n                        <h1>Popular lists</h1>\r\n                        <p>Show More</p>\r\n                    </div>\r\n                    <div className=\"newsfeed__popularlists__badges\">\r\n                        {popularTopics.map((topic)=>(\r\n                            <Chip \r\n                            label={topic}\r\n                            image={`https://avatars.dicebear.com/api/human/${topic}.svg`}\r\n                           \r\n                            // avatar={\r\n                            // <Avatar src={}\r\n                            // />}\r\n                            /> \r\n                         ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Newsfeed \r\n",["64","65"],"C:\\Users\\larry\\robinhood\\src\\LineGraph.js",["66"],"import React,{useEffect, useState} from 'react';\r\nimport './LineGraph.css';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nfunction LineGraph() {\r\n    const [ graphData, setGraphData ] = useState([]);\r\n    const data = \r\n    [{\r\n        x: 10,\r\n        y: 20\r\n    },{\r\n        x: 15,\r\n        y: 10\r\n    },{\r\n        x: 12,\r\n        y: 4\r\n    }]\r\n\r\n    const createMockData = ()=>{\r\n        let data = [];\r\n        let value = 50;\r\n        for(var i=0; i<366; i++){\r\n            let date = new Date();\r\n            date.setHours(0,0,0,0);\r\n            date.setDate(i);\r\n            value += Math.round((Math.random()<0.5 ? 1:0)*Math.random()*10);\r\n            data.push({x: date, y: value});\r\n        }\r\n        setGraphData(data)\r\n    }\r\n    useEffect(() => {\r\n        createMockData()\r\n     \r\n    }, [])\r\n    return (\r\n        <div className='lineGraph'>\r\n            <Line\r\n            data={{datasets:[{\r\n                type: 'line',\r\n                data: graphData,\r\n                backgroundColor: 'black',\r\n                borderColor: '#5AC53B',\r\n                borderWidth: 2,\r\n                pointBorderColor: 'rgba(0,0,0,0)',\r\n                pointBackgroundColor: 'rgba(0,0,0,0)',\r\n                pointHoverBackgroundColor: '#5AC53B',\r\n                pointHoverBorderColor:'#000000',\r\n                pointHoverBorderWidth: 4,\r\n                pointHoverRadius: 6,\r\n            }]}}\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                },\r\n                hover: {\r\n                    intersect: false\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'time',\r\n                        time: {\r\n                            format: 'MM/DD/YY',\r\n                            tooltipFormat: 'll',\r\n                        },\r\n                        ticks: {\r\n                            display: false\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            display: false\r\n                        }\r\n                    }]\r\n                }\r\n            }}\r\n            \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","C:\\Users\\larry\\robinhood\\src\\Stats.js",["67","68","69"],"import React, {useState, useEffect} from 'react';\r\nimport './Stats.css';\r\nimport axios from 'axios';\r\nimport StatsRow from './StatsRow';\r\nimport db from './firebase'\r\n\r\nconst BASE_URL='https://finnhub.io/api/v1/quote';\r\nconst TOKEN = 'bv634bn48v6phr4c6oe0'\r\n\r\nfunction Stats() {\r\n    const [stockData, setstockData] = useState([])\r\n    const [myStocks, setmyStocks] = useState([])\r\n\r\n    const getMyStocks = () =>{\r\n        db.collection('myStocks').onSnapshot(snapshot => {\r\n            // console.log(snapshot)\r\n            // console.log(snapshot.docs)\r\n            let promises = [];\r\n            let tempData = [];\r\n            snapshot.docs.map((doc)=>{\r\n                console.log(doc.data())\r\n                promises.push(getStockData(doc.data().ticker)\r\n                .then(res => {\r\n                    tempData.push({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                        info: res.data\r\n                    })\r\n                }))\r\n            })\r\nPromise.all(promises).then(()=>{\r\n    console.log(tempData);\r\n    setmyStocks(tempData)\r\n})\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getStockData = (stock)=>{\r\n        return axios\r\n        .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n        .catch((error)=>{\r\n            console.error('Error', error.message)\r\n        })\r\n\r\n    }\r\n    useEffect(()=>{\r\n        let tempStocksData = []\r\nconst stocksList = ['AAPL', 'MSFT', 'TSLA', \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"]\r\nlet promises = [];\r\ngetMyStocks();\r\nstocksList.map((stock)=>{\r\n    promises.push(\r\n        getStockData(stock)\r\n        .then((res)=>{\r\n            console.log(res);\r\n            tempStocksData.push({\r\n            name: stock,\r\n            ...res.data\r\n        })\r\n    })\r\n    )\r\n})\r\n\r\nPromise.all(promises).then(()=>{\r\n    console.log(tempStocksData);\r\n    setstockData(tempStocksData)\r\n})\r\n\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className='stats'>\r\n            <div className=\"stats__container\">\r\n                <div className=\"stats__header\">\r\n                    <p>Stocks</p>\r\n                    {/* firebase */}\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__rows\">\r\n                        {/* for our current stocks */}\r\n                        {myStocks.map((stock)=>(\r\n                            <StatsRow\r\n                                key={stock.data.ticker}\r\n                                name={stock.data.ticker}\r\n                                openPrice={stock.info.o}\r\n                                shares={stock.data.shares}\r\n                                price={stock.info.c}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"stats__header stats__lists\">\r\n                    <p>Lists</p>\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__rows\">\r\n                        {/* stocks we can buy */}\r\n                        {stockData.map((stock)=>(\r\n                            <StatsRow\r\n                                key={stock.name}\r\n                                name={stock.name}\r\n                                openPrice={stock.o}\r\n                                price={stock.c}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","C:\\Users\\larry\\robinhood\\src\\StatsRow.js",["70"],"import React from 'react';\r\nimport './StatsRow.css';\r\nimport StockSVG from './stock.svg';\r\nimport db from './firebase'\r\n\r\nfunction StatsRow(props) {\r\n    const percentage = ((props.price - props.openPrice)/props.openPrice) * 100;\r\n\r\n    const buyStock = () => {\r\n        console.log('buy',props.name)\r\n        db.collection('myStocks').where('ticker', '==', props.name).get().then((querySnapshot)=>{\r\n            if(!querySnapshot.empty){\r\n                //update the record\r\n                \r\n                querySnapshot.forEach(function(doc) {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                db.collection('myStocks')\r\n                .doc(doc.id)\r\n                .update({\r\n                    shares: doc.data().shares+=1\r\n                })\r\n                console.log(doc.id, \" => \", doc.data());\r\n            }); \r\n            } else {\r\n                //add a new record\r\n                db.collection('myStocks')\r\n                .add({\r\n                    ticker: props.name,\r\n                    shares: 1\r\n                })\r\n                console.log('not available')\r\n            }\r\n            \r\n           \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='row' onClick={buyStock}>\r\n            <div className=\"row__intro\">\r\n                <h1>{props?.name}</h1>\r\n                <p>{props.shares && (props.shares + 'shares')}</p>            \r\n                {/* <h1>AAPL</h1>\r\n                <p>200 shares</p> */}\r\n        </div>\r\n        <div className=\"row__chat\">\r\n            <img src={StockSVG} height={16} />\r\n        </div>\r\n        <div className=\"row__numbers\">\r\n            <p className=\"row__price\">{props.price}</p>\r\n            <p className='row__percentage'>+{Number(percentage).toFixed(2)}%</p>\r\n            {/* <p className=\"row__price\">$200</p>\r\n            <p className='row__percentage'>+200%</p> */}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsRow\r\n","C:\\Users\\larry\\robinhood\\src\\firebase.js",[],"C:\\Users\\larry\\robinhood\\src\\TimeLine.js",[],"C:\\Users\\larry\\robinhood\\src\\index.js",[],"C:\\Users\\larry\\robinhood\\src\\Chip.js",["71"],{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":17,"nodeType":"82","endLine":9,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":17,"column":17,"nodeType":"82","endLine":17,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":18,"column":17,"nodeType":"82","endLine":18,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":19,"column":17,"nodeType":"82","endLine":19,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":20,"column":17,"nodeType":"82","endLine":20,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":21,"column":17,"nodeType":"82","endLine":21,"endColumn":29},{"ruleId":"72","severity":1,"message":"85","line":22,"column":24,"nodeType":"74","messageId":"75","endLine":22,"endColumn":40},{"ruleId":"76","replacedBy":"86"},{"ruleId":"78","replacedBy":"87"},{"ruleId":"72","severity":1,"message":"88","line":7,"column":11,"nodeType":"74","messageId":"75","endLine":7,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":20,"column":36,"nodeType":"91","messageId":"92","endLine":20,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":57,"column":23,"nodeType":"91","messageId":"92","endLine":57,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":76,"column":7,"nodeType":"95","endLine":76,"endColumn":9,"suggestions":"96"},{"ruleId":"80","severity":1,"message":"81","line":47,"column":13,"nodeType":"82","endLine":47,"endColumn":47},{"ruleId":"80","severity":1,"message":"81","line":8,"column":17,"nodeType":"82","endLine":8,"endColumn":64},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setPopularTopics' is assigned a value but never used.",["97"],["98"],"'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [getMyStocks]",{"range":"102","text":"103"},[1897,1899],"[getMyStocks]"]